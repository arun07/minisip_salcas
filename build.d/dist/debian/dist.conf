#!/usr/bin/perl
#
#  dist.conf - minisip configuration for Debian
#
#  The settings provided here should extend the core configuration
#  in ways that are specific to the Debian distribution.  This may 
#  include calling new callbacks defined by the 'dist.pl' script.
#
#######

our $debian_release_default = 'sid';

set_callbacks('libmutil', 'bootstrap-pre' => sub {
		for my $i ( qw( libtool ltdl ) ) {
			copy("/usr/share/aclocal/$i.m4", "$srcdir/$i.m4")
				or die "unable to copy $i.m4 to $srcdir/m4";
		}
	});

foreach my $p ( @packages ) {
    set_callbacks($p, 'dist-post' => \&debian_cb_dist_post);
    set_callbacks($p, 'tarclean-pre' => \&debian_cb_tarclean_pre);
};

my %sid_params = (
	suite => 'unstable',
	codename => 'sid',
	description => 'Debian unstable/sid',
	buildareadir => "$topdir/build/build-area/debian",
);

my %etch_params = (
	suite => 'testing',
	codename => 'lenny',
	description => 'Debian testing/lenny',
	buildareadir => "$topdir/build/build-area/debian",
);

my %sarge_params = (
	suite => 'stable',
	codename => 'etch',
	description => 'Debian stable/etch',
	buildareadir => "$topdir/build/build-area/debian",
);

my %dapper_params = (
	suite => 'dapper',
	codename => 'dapper',
	description => 'Ubuntu dapper',
	buildareadir => "$topdir/build/build-area/ubuntu",
);

my %edgy_params = (
	suite => 'edgy',
	codename => 'edgy',
	description => 'Ubuntu edgy',
	buildareadir => "$topdir/build/build-area/ubuntu",
);

our %debian_releases = (
	sid => \%sid_params,
	sarge => \%sarge_params,
	etch => \%etch_params,

	dapper => \%dapper_params,
	edgy => \%edgy_params,
);

our %debian_callbacks = (
	# Parameters: %debian_release
	# Returns:    builder used as --svn-builder
	builder => undef,

	# Parameters: %debian_release, $changes_filename
	# Returns:    -
	'package-post' => undef,
);

1
